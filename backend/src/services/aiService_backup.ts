import OpenAI from 'openai';
import { db } from '../models/database';

interface SurveyData {
  name: string;
  age: number;
  currentGrade: string;
  interests: string[];
  skills: string[];
  academicScores: {
    [subject: string]: number;
  };
  careerGoals: string;
  learningStyle: string;
  workEnvironmentPreference: string;
}

interface AIAnalysisResult {
  recommendedMajors: RecommendedMajor[];
  analysisSummary: string;
  strengths: string[];
  recommendations: string[];
  confidenceScore: number;
  fullResponse: any;
}

interface RecommendedMajor {
  majorId: number;
  majorName: string;
  majorCode: string;
  matchScore: number;
  reasons: string[];
}

export class AIService {
  private openai: OpenAI;

  constructor() {
    if (!process.env.OPENAI_API_KEY) {
      console.warn('‚ö†Ô∏è OPENAI_API_KEY not found. AI features will be limited.');
    }

    this.openai = new OpenAI({
      apiKey: process.env.OPENAI_API_KEY || 'demo-key',
    });
  }

  async analyzeCareerFit(surveyData: SurveyData): Promise<AIAnalysisResult> {
    try {
      // Get available majors from database
      const majors = await db.all(`
        SELECT id, name, code, description, career_prospects, required_skills, subjects
        FROM majors
      `);

      // Create AI prompt
      const prompt = this.createAnalysisPrompt(surveyData, majors);

      // Call OpenAI API
      const completion = await this.openai.chat.completions.create({
        model: "gpt-4",
        messages: [
          {
            role: "system",
            content: "B·∫°n l√† chuy√™n gia t∆∞ v·∫•n gi√°o d·ª•c v√† ngh·ªÅ nghi·ªáp t·∫°i FPT Polytechnic. H√£y ph√¢n t√≠ch th√¥ng tin h·ªçc sinh v√† ƒë∆∞a ra l·ªùi khuy√™n ch√≠nh x√°c, chi ti·∫øt b·∫±ng ti·∫øng Vi·ªát."
          },
          {
            role: "user",
            content: prompt
          }
        ],
        temperature: 0.7,
        max_tokens: 2000,
      });

      const aiResponse = completion.choices[0]?.message?.content;
      
      if (!aiResponse) {
        throw new Error('No response from AI');
      }

      // Parse AI response and structure the result
      const analysisResult = this.parseAIResponse(aiResponse, majors);
      
      return {
        ...analysisResult,
        fullResponse: {
          prompt,
          response: aiResponse,
          model: "gpt-4",
          timestamp: new Date().toISOString()
        }
      };

    } catch (error: any) {
      console.error('‚ùå AI Analysis Error:', error);
      
      // Fallback to rule-based analysis if AI fails
      return this.fallbackAnalysis(surveyData);
    }
  }

  private createAnalysisPrompt(surveyData: SurveyData, majors: any[]): string {
    const majorsList = majors.map(m => 
      `- ${m.name} (${m.code}): ${m.description}`
    ).join('\n');

    return `
Ph√¢n t√≠ch th√¥ng tin h·ªçc sinh v√† ƒë∆∞a ra g·ª£i √Ω ng√†nh h·ªçc ph√π h·ª£p t·∫°i FPT Polytechnic:

TH√îNG TIN H·ªåC SINH:
- T√™n: ${surveyData.name}
- Tu·ªïi: ${surveyData.age}
- L·ªõp: ${surveyData.currentGrade}
- S·ªü th√≠ch: ${surveyData.interests.join(', ')}
- K·ªπ nƒÉng: ${surveyData.skills.join(', ')}
- ƒêi·ªÉm s·ªë c√°c m√¥n: ${JSON.stringify(surveyData.academicScores)}
- M·ª•c ti√™u ngh·ªÅ nghi·ªáp: ${surveyData.careerGoals}
- Phong c√°ch h·ªçc: ${surveyData.learningStyle}
- M√¥i tr∆∞·ªùng l√†m vi·ªác: ${surveyData.workEnvironmentPreference}

C√ÅC NG√ÄNH H·ªåC T·∫†I FPT POLYTECHNIC:
${majorsList}

Y√äU C·∫¶U PH√ÇN T√çCH:
1. ƒê√°nh gi√° ƒë·ªô ph√π h·ª£p c·ªßa t·ª´ng ng√†nh (ƒëi·ªÉm t·ª´ 0-100)
2. Ch·ªçn 3 ng√†nh ph√π h·ª£p nh·∫•t
3. Ph√¢n t√≠ch ƒëi·ªÉm m·∫°nh c·ªßa h·ªçc sinh
4. ƒê∆∞a ra khuy·∫øn ngh·ªã c·ª• th·ªÉ

ƒê·ªäNH D·∫†NG PH·∫¢N H·ªíI (JSON):
{
  "recommendedMajors": [
    {
      "majorName": "T√™n ng√†nh",
      "majorCode": "M√£ ng√†nh", 
      "matchScore": 85,
      "reasons": ["L√Ω do 1", "L√Ω do 2", "L√Ω do 3"]
    }
  ],
  "analysisSummary": "T√≥m t·∫Øt ph√¢n t√≠ch t·ªïng quan",
  "strengths": ["ƒêi·ªÉm m·∫°nh 1", "ƒêi·ªÉm m·∫°nh 2"],
  "recommendations": ["Khuy·∫øn ngh·ªã 1", "Khuy·∫øn ngh·ªã 2"],
  "confidenceScore": 0.85
}

H√£y ph√¢n t√≠ch k·ªπ l∆∞·ª°ng v√† ƒë∆∞a ra ph·∫£n h·ªìi JSON ch√≠nh x√°c.
    `;
  }

  private parseAIResponse(aiResponse: string, majors: any[]): Omit<AIAnalysisResult, 'fullResponse'> {
    try {
      // Extract JSON from AI response
      const jsonMatch = aiResponse.match(/\{[\s\S]*\}/);
      if (!jsonMatch) {
        throw new Error('No JSON found in AI response');
      }

      const parsed = JSON.parse(jsonMatch[0]);

      // Map major names to IDs
      const recommendedMajors = parsed.recommendedMajors.map((rec: any) => {
        const major = majors.find(m => 
          m.name === rec.majorName || m.code === rec.majorCode
        );
        
        return {
          majorId: major?.id || 0,
          majorName: rec.majorName,
          majorCode: rec.majorCode,
          matchScore: rec.matchScore,
          reasons: rec.reasons || []
        };
      });

      return {
        recommendedMajors,
        analysisSummary: parsed.analysisSummary || '',
        strengths: parsed.strengths || [],
        recommendations: parsed.recommendations || [],
        confidenceScore: parsed.confidenceScore || 0.7
      };

    } catch (error) {
      console.error('‚ùå Failed to parse AI response:', error);
      throw new Error('Failed to parse AI analysis');
    }
  }

  private fallbackAnalysis(surveyData: SurveyData): AIAnalysisResult {
    console.log('üîÑ Using fallback rule-based analysis');

    // Advanced rule-based matching
    const recommendations: RecommendedMajor[] = [];
    const scores: {[key: string]: number} = {};

    // Calculate scores for each major based on multiple factors
    
    // IT Score
    let itScore = 60; // Base score
    if (surveyData.interests.includes('C√¥ng ngh·ªá th√¥ng tin')) itScore += 20;
    if (surveyData.skills.includes('L·∫≠p tr√¨nh')) itScore += 15;
    if (surveyData.skills.includes('T∆∞ duy logic')) itScore += 10;
    if (surveyData.academicScores.math >= 8) itScore += 15;
    if (surveyData.academicScores.physics >= 7) itScore += 10;
    if (surveyData.careerGoals.toLowerCase().includes('l·∫≠p tr√¨nh')) itScore += 10;
    scores['IT'] = Math.min(itScore, 98);

    // Design Score
    let designScore = 50;
    if (surveyData.interests.includes('Thi·∫øt k·∫ø ƒë·ªì h·ªça')) designScore += 25;
    if (surveyData.skills.includes('S√°ng t·∫°o')) designScore += 20;
    if (surveyData.skills.includes('Thi·∫øt k·∫ø')) designScore += 15;
    if (surveyData.interests.includes('Ngh·ªá thu·∫≠t')) designScore += 15;
    if (surveyData.learningStyle === 'visual') designScore += 10;
    scores['GD'] = Math.min(designScore, 95);

    // Marketing Score
    let marketingScore = 55;
    if (surveyData.interests.includes('Marketing')) marketingScore += 20;
    if (surveyData.skills.includes('Giao ti·∫øp')) marketingScore += 15;
    if (surveyData.skills.includes('Thuy·∫øt tr√¨nh')) marketingScore += 15;
    if (surveyData.workEnvironmentPreference === 'office') marketingScore += 5;
    if (surveyData.academicScores.english >= 7) marketingScore += 10;
    scores['MKT'] = Math.min(marketingScore, 92);

    // Accounting Score
    let accScore = 45;
    if (surveyData.interests.includes('K·∫ø to√°n')) accScore += 25;
    if (surveyData.skills.includes('T√≠nh to√°n')) accScore += 15;
    if (surveyData.academicScores.math >= 7) accScore += 15;
    if (surveyData.careerGoals.toLowerCase().includes('k·∫ø to√°n')) accScore += 10;
    scores['ACC'] = Math.min(accScore, 90);

    // Business Score
    let businessScore = 65;
    if (surveyData.interests.includes('Qu·∫£n tr·ªã kinh doanh')) businessScore += 20;
    if (surveyData.skills.includes('L√£nh ƒë·∫°o')) businessScore += 15;
    if (surveyData.skills.includes('Giao ti·∫øp')) businessScore += 10;
    if (surveyData.careerGoals.toLowerCase().includes('qu·∫£n l√Ω')) businessScore += 10;
    scores['BA'] = Math.min(businessScore, 88);

    // Electronics Score
    let electronicsScore = 50;
    if (surveyData.interests.includes('ƒêi·ªán t·ª≠ vi·ªÖn th√¥ng')) electronicsScore += 25;
    if (surveyData.academicScores.physics >= 8) electronicsScore += 15;
    if (surveyData.academicScores.math >= 7) electronicsScore += 10;
    if (surveyData.skills.includes('T∆∞ duy k·ªπ thu·∫≠t')) electronicsScore += 15;
    scores['ET'] = Math.min(electronicsScore, 85);

    // Sort by score and take top 3
    const sortedMajors = Object.entries(scores)
      .sort(([,a], [,b]) => b - a)
      .slice(0, 3);

    const majorNames = {
      'IT': 'C√¥ng ngh·ªá th√¥ng tin',
      'GD': 'Thi·∫øt k·∫ø ƒë·ªì h·ªça', 
      'MKT': 'Marketing',
      'ACC': 'K·∫ø to√°n',
      'BA': 'Qu·∫£n tr·ªã kinh doanh',
      'ET': 'ƒêi·ªán t·ª≠ vi·ªÖn th√¥ng'
    };

    const majorIds = {
      'IT': 1, 'GD': 2, 'MKT': 3, 'ACC': 4, 'BA': 5, 'ET': 6
    };

    sortedMajors.forEach(([code, score]) => {
      const reasons = [];
      if (code === 'IT' && surveyData.academicScores.math >= 7) reasons.push('ƒêi·ªÉm to√°n cao');
      if (code === 'GD' && surveyData.skills.includes('S√°ng t·∫°o')) reasons.push('C√≥ kh·∫£ nƒÉng s√°ng t·∫°o');
      if (code === 'MKT' && surveyData.skills.includes('Giao ti·∫øp')) reasons.push('K·ªπ nƒÉng giao ti·∫øp t·ªët');
      
      reasons.push(`Ph√π h·ª£p v·ªõi s·ªü th√≠ch c·ªßa b·∫°n`);
      reasons.push(`Ph√π h·ª£p v·ªõi nƒÉng l·ª±c hi·ªán t·∫°i`);

      recommendations.push({
        majorId: majorIds[code as keyof typeof majorIds],
        majorName: majorNames[code as keyof typeof majorNames],
        majorCode: code,
        matchScore: Math.round(score),
        reasons: reasons.slice(0, 3)
      });
    });

    return {
      recommendedMajors: recommendations.slice(0, 3),
      analysisSummary: `D·ª±a tr√™n ph√¢n t√≠ch s·ªü th√≠ch v√† k·ªπ nƒÉng c·ªßa ${surveyData.name}, ch√∫ng t√¥i khuy·∫øn ngh·ªã c√°c ng√†nh h·ªçc ph√π h·ª£p v·ªõi ƒë·ªãnh h∆∞·ªõng ngh·ªÅ nghi·ªáp.`,
      strengths: ['C√≥ ƒë·ªông l·ª±c h·ªçc t·∫≠p', 'Quan t√¢m ƒë·∫øn t∆∞∆°ng lai'],
      recommendations: [
        'T√¨m hi·ªÉu th√™m v·ªÅ c√°c ng√†nh ƒë∆∞·ª£c g·ª£i √Ω',
        'Tham gia c√°c ho·∫°t ƒë·ªông th·ª±c t·∫ø ƒë·ªÉ kh√°m ph√° s·ªü th√≠ch',
        'Trao ƒë·ªïi v·ªõi gi√°o vi√™n v√† gia ƒë√¨nh v·ªÅ ƒë·ªãnh h∆∞·ªõng'
      ],
      confidenceScore: 0.6,
      fullResponse: {
        method: 'fallback-rule-based',
        timestamp: new Date().toISOString()
      }
    };
  }

  async generateChatResponse(message: string, context?: any): Promise<string> {
    // Always use fallback responses when no valid API key
    if (!process.env.OPENAI_API_KEY || process.env.OPENAI_API_KEY === 'demo-key') {
      console.log('üîÑ Using fallback chat response');
      return this.generateFallbackChatResponse(message);
    }

    try {
      const systemPrompt = `
B·∫°n l√† chatbot t∆∞ v·∫•n gi√°o d·ª•c c·ªßa FPT Polytechnic. 
H√£y tr·∫£ l·ªùi c√°c c√¢u h·ªèi v·ªÅ:
- C√°c ng√†nh h·ªçc t·∫°i FPT Polytechnic
- T∆∞ v·∫•n ƒë·ªãnh h∆∞·ªõng ngh·ªÅ nghi·ªáp
- Th√¥ng tin tuy·ªÉn sinh
- C∆° h·ªôi vi·ªác l√†m sau t·ªët nghi·ªáp

Tr·∫£ l·ªùi b·∫±ng ti·∫øng Vi·ªát, th√¢n thi·ªán v√† h·ªØu √≠ch.
      `;

      const completion = await this.openai.chat.completions.create({
        model: "gpt-3.5-turbo",
        messages: [
          { role: "system", content: systemPrompt },
          { role: "user", content: message }
        ],
        temperature: 0.7,
        max_tokens: 500,
      });

      return completion.choices[0]?.message?.content || 'Xin l·ªói, t√¥i kh√¥ng th·ªÉ tr·∫£ l·ªùi c√¢u h·ªèi n√†y l√∫c n√†y.';

    } catch (error) {
      console.error('‚ùå Chat AI Error:', error);
      return this.generateFallbackChatResponse(message);
    }
  }

  private generateFallbackChatResponse(message: string): string {
    // Normalize Vietnamese characters and convert to lowercase
    const msg = message.toLowerCase().normalize('NFC');
    
    // Check for math concerns with IT interest (more flexible patterns)
    const mathConcerns = ['d·ªët to√°n', 'h·ªçc d·ªët to√°n', 'k√©m to√°n', 'y·∫øu to√°n', 'kh√¥ng gi·ªèi to√°n', 'to√°n k√©m', 'to√°n d·ªü', 'to√°n kh√¥ng t·ªët', 'kh√¥ng kh√° to√°n'];
    const itInterests = ['c√¥ng ngh·ªá th√¥ng tin', 'it', 'l·∫≠p tr√¨nh', 'ph·∫ßn m·ªÅm', 'm√°y t√≠nh', 'developer', 'coder', 'programmer'];
    
    const hasMathConcern = mathConcerns.some(concern => msg.includes(concern));
    const hasItInterest = itInterests.some(interest => msg.includes(interest));
    
    if (hasMathConcern && hasItInterest) {

        return `ü§î **H·ªçc d·ªët to√°n c√≥ th·ªÉ h·ªçc IT kh√¥ng?**

‚úÖ **Tin t·ªët:** HO√ÄN TO√ÄN ƒê∆Ø·ª¢C! Nhi·ªÅu l·∫≠p tr√¨nh vi√™n gi·ªèi kh√¥ng xu·∫•t th√¢n t·ª´ to√°n h·ªçc.

üìä **Th·ª±c t·∫ø v·ªÅ to√°n trong IT:**
‚Ä¢ 70% c√¥ng vi·ªác IT ch·ªâ c·∫ßn to√°n c∆° b·∫£n (c·ªông, tr·ª´, nh√¢n, chia)
‚Ä¢ Logic t∆∞ duy quan tr·ªçng h∆°n t√≠nh to√°n ph·ª©c t·∫°p
‚Ä¢ C√≥ c√¥ng c·ª• v√† th∆∞ vi·ªán h·ªó tr·ª£ m·ªçi ph√©p t√≠nh

üéØ **C√°c lƒ©nh v·ª±c IT √≠t c·∫ßn to√°n:**
‚Ä¢ Frontend Development (HTML, CSS, JavaScript)
‚Ä¢ Mobile App Development  
‚Ä¢ UI/UX Design
‚Ä¢ Software Testing

üí° **L·ªùi khuy√™n:**
‚Ä¢ T·∫≠p trung v√†o logic v√† t∆∞ duy thu·∫≠t to√°n
‚Ä¢ H·ªçc t·ª´ c∆° b·∫£n, t·ª´ t·ª´ x√¢y d·ª±ng n·ªÅn t·∫£ng
‚Ä¢ Th·ª±c h√†nh nhi·ªÅu h∆°n l√Ω thuy·∫øt

üöÄ B·∫°n c√≥ mu·ªën t√¥i t∆∞ v·∫•n l·ªô tr√¨nh h·ªçc IT ph√π h·ª£p v·ªõi ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu kh√¥ng?`;
      }
    }

    // Check for drawing concerns with design interest
    const drawingConcerns = ['kh√¥ng bi·∫øt v·∫Ω', 'kh√¥ng gi·ªèi v·∫Ω', 'v·∫Ω d·ªü', 'ch∆∞a bi·∫øt v·∫Ω', 'v·∫Ω kh√¥ng ƒë·∫πp', 'kh√¥ng c√≥ t√†i nƒÉng v·∫Ω'];
    const designInterests = ['thi·∫øt k·∫ø', 'ƒë·ªì h·ªça', 'design', 'ui/ux', 'graphic', 'designer'];
    
    const hasDrawingConcern = drawingConcerns.some(concern => msg.includes(concern));
    const hasDesignInterest = designInterests.some(interest => msg.includes(interest));
    
    if (hasDrawingConcern && hasDesignInterest) {

        return `üé® **Kh√¥ng bi·∫øt v·∫Ω c√≥ h·ªçc ƒë∆∞·ª£c Thi·∫øt k·∫ø kh√¥ng?**

‚úÖ **Tin t·ªët:** C√ì TH·ªÇ H·ªåC ƒê∆Ø·ª¢C! Thi·∫øt k·∫ø hi·ªán ƒë·∫°i kh√°c xa v·ªõi v·∫Ω tay truy·ªÅn th·ªëng.

üñ•Ô∏è **Thi·∫øt k·∫ø s·ªë hi·ªán t·∫°i:**
‚Ä¢ 90% l√†m vi·ªác tr√™n m√°y t√≠nh (Photoshop, Illustrator)
‚Ä¢ C√≥ template v√† asset c√≥ s·∫µn
‚Ä¢ AI h·ªó tr·ª£ t·∫°o √Ω t∆∞·ªüng v√† n·ªôi dung
‚Ä¢ T·∫≠p trung v√†o √Ω t∆∞·ªüng h∆°n k·ªπ thu·∫≠t v·∫Ω

üéØ **K·ªπ nƒÉng quan tr·ªçng h∆°n v·∫Ω tay:**
‚Ä¢ T∆∞ duy s√°ng t·∫°o v√† th·∫©m m·ªπ
‚Ä¢ Hi·ªÉu t√¢m l√Ω kh√°ch h√†ng
‚Ä¢ Xu h∆∞·ªõng m√†u s·∫Øc, font ch·ªØ
‚Ä¢ K·ªπ nƒÉng s·ª≠ d·ª•ng ph·∫ßn m·ªÅm

üí° **L·ªùi khuy√™n:**
‚Ä¢ B·∫Øt ƒë·∫ßu h·ªçc Photoshop c∆° b·∫£n
‚Ä¢ Tham kh·∫£o thi·∫øt k·∫ø tr√™n Pinterest, Behance
‚Ä¢ Th·ª±c h√†nh l√†m poster, banner ƒë∆°n gi·∫£n

üöÄ Quan tr·ªçng l√† C·∫¢M TH·∫®M M·ª∏, kh√¥ng ph·∫£i tay ngh·ªÅ v·∫Ω! B·∫°n c√≥ th√≠ch m√†u s·∫Øc v√† b·ªë c·ª•c ƒë·∫πp kh√¥ng?`;
      }
    }

    // Check for financial concerns
    const financialConcerns = ['gia ƒë√¨nh ngh√®o', 'kh√¥ng c√≥ ti·ªÅn', 'kinh t·∫ø kh√≥ khƒÉn', 'h·ªçc ph√≠ cao', 'kh√¥ng ƒë·ªß ti·ªÅn'];
    const hasFinancialConcern = financialConcerns.some(concern => msg.includes(concern));
    
    if (hasFinancialConcern) {
      return `üí∞ **Kh√≥ khƒÉn kinh t·∫ø c√≥ th·ªÉ h·ªçc ƒë∆∞·ª£c kh√¥ng?**

‚úÖ **ƒê·ª´ng lo l·∫Øng!** FPT Polytechnic c√≥ nhi·ªÅu ch√≠nh s√°ch h·ªó tr·ª£:

üéì **H·ªçc b·ªïng:**
‚Ä¢ H·ªçc b·ªïng 100% cho h·ªçc sinh gi·ªèi
‚Ä¢ H·ªçc b·ªïng 50% cho ho√†n c·∫£nh kh√≥ khƒÉn
‚Ä¢ H·ªçc b·ªïng t√†i nƒÉng ƒë·∫∑c bi·ªát

üí≥ **H·ªó tr·ª£ t√†i ch√≠nh:**
‚Ä¢ Tr·∫£ g√≥p h·ªçc ph√≠ 0% l√£i su·∫•t
‚Ä¢ Vay v·ªën ∆∞u ƒë√£i t·ª´ ng√¢n h√†ng
‚Ä¢ L√†m part-time t·∫°i tr∆∞·ªùng

üè¢ **C∆° h·ªôi vi·ªác l√†m:**
‚Ä¢ Th·ª±c t·∫≠p c√≥ l∆∞∆°ng t·ª´ nƒÉm 2
‚Ä¢ Job fair v·ªõi m·ª©c l∆∞∆°ng h·∫•p d·∫´n
‚Ä¢ Cam k·∫øt vi·ªác l√†m sau t·ªët nghi·ªáp

üí° **L·ªùi khuy√™n:** H√£y ƒëƒÉng k√Ω t∆∞ v·∫•n ƒë·ªÉ bi·∫øt c√°c ch∆∞∆°ng tr√¨nh h·ªó tr·ª£ c·ª• th·ªÉ!

B·∫°n mu·ªën bi·∫øt th√™m v·ªÅ h·ªçc b·ªïng n√†o?`;
    }

    // Check for age concerns
    if (msg.includes('tu·ªïi l·ªõn') || msg.includes('ƒë√£ gi√†') || msg.includes('qu√° tu·ªïi') || msg.includes('30 tu·ªïi') || msg.includes('40 tu·ªïi')) {
      return `‚è∞ **H·ªçc ·ªü tu·ªïi l·ªõn c√≥ mu·ªôn kh√¥ng?**

‚úÖ **KH√îNG BAO GI·ªú MU·ªòN!** Nhi·ªÅu ng∆∞·ªùi th√†nh c√¥ng b·∫Øt ƒë·∫ßu mu·ªôn:

üìä **Th·ªëng k√™ t√≠ch c·ª±c:**
‚Ä¢ 25% sinh vi√™n FPT Poly tr√™n 25 tu·ªïi
‚Ä¢ Nhi·ªÅu CEO c√¥ng ngh·ªá h·ªçc l·∫≠p tr√¨nh sau 30
‚Ä¢ Kinh nghi·ªám s·ªëng l√† l·ª£i th·∫ø l·ªõn

üéØ **∆Øu ƒëi·ªÉm c·ªßa ng∆∞·ªùi l·ªõn tu·ªïi:**
‚Ä¢ M·ª•c ti√™u r√µ r√†ng, quy·∫øt t√¢m cao
‚Ä¢ Kinh nghi·ªám cu·ªôc s·ªëng phong ph√∫
‚Ä¢ K·ªπ nƒÉng giao ti·∫øp v√† qu·∫£n l√Ω t·ªët
‚Ä¢ T√†i ch√≠nh ·ªïn ƒë·ªãnh h∆°n

üíº **C∆° h·ªôi ngh·ªÅ nghi·ªáp:**
‚Ä¢ Nhi·ªÅu c√¥ng ty ƒë√°nh gi√° cao ƒë·ªô tr∆∞·ªüng th√†nh
‚Ä¢ C√≥ th·ªÉ l√†m mentor, team lead
‚Ä¢ Kh·ªüi nghi·ªáp v·ªõi kinh nghi·ªám th·ª±c t·∫ø

üöÄ **L·ªùi khuy√™n:** B·∫Øt ƒë·∫ßu ngay h√¥m nay, 5 nƒÉm sau b·∫°n s·∫Ω c·∫£m ∆°n quy·∫øt ƒë·ªãnh n√†y!

B·∫°n quan t√¢m ng√†nh n√†o ƒë·ªÉ b·∫Øt ƒë·∫ßu?`;
    }

    // Check for gender concerns
    if ((msg.includes('con g√°i') || msg.includes('n·ªØ') || msg.includes('ph·ª• n·ªØ')) && 
        (msg.includes('it') || msg.includes('l·∫≠p tr√¨nh') || msg.includes('c√¥ng ngh·ªá'))) {
      return `üë©‚Äçüíª **N·ªØ gi·ªõi c√≥ ph√π h·ª£p v·ªõi IT kh√¥ng?**

‚úÖ **HO√ÄN TO√ÄN PH√ô H·ª¢P!** IT kh√¥ng ph√¢n bi·ªát gi·ªõi t√≠nh:

üåü **Th·ª±c t·∫ø t√≠ch c·ª±c:**
‚Ä¢ 40% sinh vi√™n IT t·∫°i FPT Poly l√† n·ªØ
‚Ä¢ Nhi·ªÅu n·ªØ CEO c√¥ng ngh·ªá th√†nh c√¥ng
‚Ä¢ N·ªØ gi·ªõi th∆∞·ªùng t·ªâ m·ªâ, chi ti·∫øt h∆°n

üí™ **∆Øu ƒëi·ªÉm c·ªßa n·ªØ gi·ªõi trong IT:**
‚Ä¢ K·ªπ nƒÉng giao ti·∫øp v√† l√†m vi·ªác nh√≥m t·ªët
‚Ä¢ T∆∞ duy logic v√† gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ s√°ng t·∫°o
‚Ä¢ UI/UX Design: n·ªØ gi·ªõi c√≥ l·ª£i th·∫ø th·∫©m m·ªπ
‚Ä¢ Testing: y√™u c·∫ßu s·ª± t·ªâ m·ªâ, ch√≠nh x√°c

üéØ **Lƒ©nh v·ª±c IT ph√π h·ª£p:**
‚Ä¢ Frontend Development
‚Ä¢ UI/UX Design
‚Ä¢ Business Analyst
‚Ä¢ Project Management
‚Ä¢ Quality Assurance

üöÄ **Th√¥ng ƒëi·ªáp:** C√¥ng ngh·ªá c·∫ßn s·ª± ƒëa d·∫°ng, v√† b·∫°n ch√≠nh l√† t∆∞∆°ng lai!

B·∫°n quan t√¢m lƒ©nh v·ª±c n√†o trong IT?`;
    }
    
    // Greetings and general questions
    if (msg.includes('xin ch√†o') || msg.includes('hello') || msg.includes('hi') || msg === 'ch√†o' || 
        msg.includes('alo') || msg.includes('al√¥') || msg.includes('hey') || 
        msg === 'ch√†o b·∫°n' || msg === 'ch√†o em' || msg.includes('good morning') || 
        msg.includes('good afternoon') || msg.includes('good evening')) {
      const greetings = [
        `Ch√†o b·∫°n! üëã T√¥i l√† AI t∆∞ v·∫•n tuy·ªÉn sinh FPT Polytechnic. B·∫°n ƒëang quan t√¢m ng√†nh h·ªçc n√†o v·∫≠y?`,
        `Xin ch√†o! üéì R·∫•t vui ƒë∆∞·ª£c h·ªó tr·ª£ b·∫°n t√¨m hi·ªÉu v·ªÅ c√°c ng√†nh h·ªçc t·∫°i FPT Polytechnic. B·∫°n c·∫ßn t∆∞ v·∫•n g√¨?`,
        `Hi b·∫°n! ‚ú® T√¥i c√≥ th·ªÉ gi√∫p b·∫°n kh√°m ph√° c√°c c∆° h·ªôi h·ªçc t·∫≠p t·∫°i FPT Polytechnic. H√£y cho t√¥i bi·∫øt b·∫°n quan t√¢m ƒëi·ªÅu g√¨ nh√©!`,
        `Al√¥! üìû T√¥i ƒë√¢y, AI t∆∞ v·∫•n FPT Polytechnic. B·∫°n mu·ªën t√¨m hi·ªÉu ng√†nh h·ªçc n√†o ·∫°?`
      ];
      return greetings[Math.floor(Math.random() * greetings.length)];
    }

    // IT related - with contextual analysis
    if (msg.includes('c√¥ng ngh·ªá th√¥ng tin') || msg.includes('it') || msg.includes('l·∫≠p tr√¨nh') || msg.includes('ph·∫ßn m·ªÅm')) {
      
      // Check for specific concerns or questions
      if (msg.includes('d·ªët to√°n') || msg.includes('k√©m to√°n') || msg.includes('y·∫øu to√°n') || msg.includes('kh√¥ng gi·ªèi to√°n') || msg.includes('to√°n k√©m') || msg.includes('to√°n d·ªü')) {
        return `ü§î **H·ªçc d·ªët to√°n c√≥ th·ªÉ h·ªçc IT kh√¥ng?**

‚úÖ **Tin t·ªët:** HO√ÄN TO√ÄN ƒê∆Ø·ª¢C! Nhi·ªÅu l·∫≠p tr√¨nh vi√™n gi·ªèi kh√¥ng xu·∫•t th√¢n t·ª´ to√°n h·ªçc.

üìä **Th·ª±c t·∫ø v·ªÅ to√°n trong IT:**
‚Ä¢ 70% c√¥ng vi·ªác IT ch·ªâ c·∫ßn to√°n c∆° b·∫£n (c·ªông, tr·ª´, nh√¢n, chia)
‚Ä¢ Logic t∆∞ duy quan tr·ªçng h∆°n t√≠nh to√°n ph·ª©c t·∫°p
‚Ä¢ C√≥ c√¥ng c·ª• v√† th∆∞ vi·ªán h·ªó tr·ª£ m·ªçi ph√©p t√≠nh

üéØ **C√°c lƒ©nh v·ª±c IT √≠t c·∫ßn to√°n:**
‚Ä¢ Frontend Development (HTML, CSS, JavaScript)
‚Ä¢ Mobile App Development  
‚Ä¢ UI/UX Design
‚Ä¢ Software Testing

üí° **L·ªùi khuy√™n:**
‚Ä¢ T·∫≠p trung v√†o logic v√† t∆∞ duy thu·∫≠t to√°n
‚Ä¢ H·ªçc t·ª´ c∆° b·∫£n, t·ª´ t·ª´ x√¢y d·ª±ng n·ªÅn t·∫£ng
‚Ä¢ Th·ª±c h√†nh nhi·ªÅu h∆°n l√Ω thuy·∫øt

üöÄ B·∫°n c√≥ mu·ªën t√¥i t∆∞ v·∫•n l·ªô tr√¨nh h·ªçc IT ph√π h·ª£p v·ªõi ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu kh√¥ng?`;
      }

      if (msg.includes('c√≥ kh√≥ kh√¥ng') || msg.includes('kh√≥ h·ªçc kh√¥ng') || msg.includes('d·ªÖ hay kh√≥')) {
        return `üéì **IT c√≥ kh√≥ h·ªçc kh√¥ng?**

‚öñÔ∏è **Th·∫≠t l√≤ng m√† n√≥i:** IT v·ª´a d·ªÖ v·ª´a kh√≥, t√πy c√°ch ti·∫øp c·∫≠n!

‚úÖ **Ph·∫ßn D·ªÑ:**
‚Ä¢ T√†i li·ªáu h·ªçc mi·ªÖn ph√≠ v√¥ s·ªë tr√™n internet
‚Ä¢ C·ªông ƒë·ªìng h·ªó tr·ª£ nhi·ªát t√¨nh
‚Ä¢ C√≥ th·ªÉ t·ª± h·ªçc v√† th·ª±c h√†nh ngay
‚Ä¢ K·∫øt qu·∫£ th·∫•y ƒë∆∞·ª£c ngay l·∫≠p t·ª©c

‚ö†Ô∏è **Ph·∫ßn KH√ì:**
‚Ä¢ C·∫ßn ki√™n tr√¨, kh√¥ng b·ªè cu·ªôc gi·ªØa ch·ª´ng
‚Ä¢ Ph·∫£i c·∫≠p nh·∫≠t c√¥ng ngh·ªá li√™n t·ª•c
‚Ä¢ Debug l·ªói ƒë√¥i khi m·∫•t nhi·ªÅu th·ªùi gian
‚Ä¢ C·∫ßn t∆∞ duy logic v√† gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ

üéØ **B√≠ quy·∫øt th√†nh c√¥ng:**
‚Ä¢ H·ªçc ƒë·ªÅu ƒë·∫∑n m·ªói ng√†y 1-2 ti·∫øng
‚Ä¢ L√†m project th·ª±c t·∫ø, kh√¥ng ch·ªâ h·ªçc l√Ω thuy·∫øt
‚Ä¢ Tham gia c·ªông ƒë·ªìng, h·ªèi khi c·∫ßn

üí™ Quan tr·ªçng nh·∫•t l√† ƒê·ª™NG S·ª¢ v√† b·∫Øt ƒë·∫ßu th√¥i! B·∫°n c√≥ quy·∫øt t√¢m kh√¥ng?`;
      }

      if (msg.includes('kh√¥ng c√≥ n·ªÅn t·∫£ng') || msg.includes('ch∆∞a bi·∫øt g√¨') || msg.includes('m·ªõi b·∫Øt ƒë·∫ßu') || msg.includes('zero kinh nghi·ªám')) {
        return `üå± **Ch∆∞a c√≥ n·ªÅn t·∫£ng IT? Kh√¥ng sao c·∫£!**

üéâ **Tin vui:** 90% sinh vi√™n FPT Polytechnic b·∫Øt ƒë·∫ßu t·ª´ con s·ªë 0!

üìã **L·ªô tr√¨nh cho ng∆∞·ªùi m·ªõi:**

**Th√°ng 1-2:** L√†m quen c∆° b·∫£n
‚Ä¢ H·ªçc HTML/CSS (t·∫°o website ƒë∆°n gi·∫£n)
‚Ä¢ Hi·ªÉu c√°ch m√°y t√≠nh ho·∫°t ƒë·ªông
‚Ä¢ L√†m quen v·ªõi thu·∫≠t ng·ªØ IT

**Th√°ng 3-6:** N·ªÅn t·∫£ng l·∫≠p tr√¨nh
‚Ä¢ JavaScript c∆° b·∫£n
‚Ä¢ Logic v√† thu·∫≠t to√°n ƒë∆°n gi·∫£n
‚Ä¢ L√†m c√°c project mini

**Th√°ng 7-12:** Chuy√™n s√¢u
‚Ä¢ Ch·ªçn 1 h∆∞·ªõng: Web, Mobile, ho·∫∑c Desktop
‚Ä¢ H·ªçc framework v√† th∆∞ vi·ªán
‚Ä¢ Project l·ªõn h∆°n

üéØ **T·∫°i FPT Polytechnic:**
‚Ä¢ Gi·∫£ng vi√™n d·∫°y t·ª´ A-Z
‚Ä¢ C√≥ lab th·ª±c h√†nh ƒë·∫ßy ƒë·ªß
‚Ä¢ B·∫°n h·ªçc c√πng nhi·ªÅu ng∆∞·ªùi c√πng tr√¨nh ƒë·ªô

üí° B·∫°n mu·ªën b·∫Øt ƒë·∫ßu t·ª´ h∆∞·ªõng n√†o: Web, Mobile App hay Game?`;
      }

      // Default IT responses for general questions
      const itResponses = [
        `üñ•Ô∏è **Ng√†nh C√¥ng ngh·ªá th√¥ng tin - L·ª±a ch·ªçn hot nh·∫•t hi·ªán nay!**

üìö **Ch∆∞∆°ng tr√¨nh h·ªçc:**
‚Ä¢ L·∫≠p tr√¨nh Java, Python, C#
‚Ä¢ Ph√°t tri·ªÉn Web & Mobile App  
‚Ä¢ Database & Cloud Computing
‚Ä¢ AI & Machine Learning c∆° b·∫£n

üíº **C∆° h·ªôi ngh·ªÅ nghi·ªáp:**
‚Ä¢ Fullstack Developer (15-30 tri·ªáu)
‚Ä¢ Mobile App Developer (12-25 tri·ªáu)
‚Ä¢ DevOps Engineer (20-40 tri·ªáu)
‚Ä¢ Data Analyst (15-35 tri·ªáu)

üéØ B·∫°n c√≥ mu·ªën bi·∫øt th√™m v·ªÅ l·ªô tr√¨nh h·ªçc ho·∫∑c ƒëi·ªÅu ki·ªán tuy·ªÉn sinh kh√¥ng?`,

        `üíª **IT t·∫°i FPT Polytechnic - N∆°i ∆∞∆°m m·∫ßm l·∫≠p tr√¨nh vi√™n!**

üî• **T·∫°i sao ch·ªçn IT:**
‚Ä¢ Ng√†nh c√≥ nhu c·∫ßu tuy·ªÉn d·ª•ng cao nh·∫•t
‚Ä¢ M·ª©c l∆∞∆°ng kh·ªüi ƒëi·ªÉm h·∫•p d·∫´n
‚Ä¢ C∆° h·ªôi l√†m vi·ªác remote, freelance
‚Ä¢ Ph√°t tri·ªÉn s·ª± nghi·ªáp nhanh

üõ†Ô∏è **C√¥ng ngh·ªá ƒë∆∞·ª£c h·ªçc:**
ReactJS, NodeJS, Flutter, Docker, AWS...

B·∫°n ƒë√£ c√≥ ki·∫øn th·ª©c l·∫≠p tr√¨nh n√†o ch∆∞a? T√¥i c√≥ th·ªÉ t∆∞ v·∫•n l·ªô tr√¨nh ph√π h·ª£p!`
      ];
      return itResponses[Math.floor(Math.random() * itResponses.length)];
    }

    // Design related - with contextual analysis
    if (msg.includes('thi·∫øt k·∫ø') || msg.includes('ƒë·ªì h·ªça') || msg.includes('design') || msg.includes('ui/ux')) {
      
      // Check for specific concerns
      if (msg.includes('kh√¥ng bi·∫øt v·∫Ω') || msg.includes('kh√¥ng gi·ªèi v·∫Ω') || msg.includes('v·∫Ω d·ªü') || msg.includes('ch∆∞a bi·∫øt v·∫Ω')) {
        return `üé® **Kh√¥ng bi·∫øt v·∫Ω c√≥ h·ªçc ƒë∆∞·ª£c Thi·∫øt k·∫ø kh√¥ng?**

‚úÖ **Tin t·ªët:** C√ì TH·ªÇ H·ªåC ƒê∆Ø·ª¢C! Thi·∫øt k·∫ø hi·ªán ƒë·∫°i kh√°c xa v·ªõi v·∫Ω tay truy·ªÅn th·ªëng.

üñ•Ô∏è **Thi·∫øt k·∫ø s·ªë hi·ªán t·∫°i:**
‚Ä¢ 90% l√†m vi·ªác tr√™n m√°y t√≠nh (Photoshop, Illustrator)
‚Ä¢ C√≥ template v√† asset c√≥ s·∫µn
‚Ä¢ AI h·ªó tr·ª£ t·∫°o √Ω t∆∞·ªüng v√† n·ªôi dung
‚Ä¢ T·∫≠p trung v√†o √Ω t∆∞·ªüng h∆°n k·ªπ thu·∫≠t v·∫Ω

üéØ **K·ªπ nƒÉng quan tr·ªçng h∆°n v·∫Ω tay:**
‚Ä¢ T∆∞ duy s√°ng t·∫°o v√† th·∫©m m·ªπ
‚Ä¢ Hi·ªÉu t√¢m l√Ω kh√°ch h√†ng
‚Ä¢ Xu h∆∞·ªõng m√†u s·∫Øc, font ch·ªØ
‚Ä¢ K·ªπ nƒÉng s·ª≠ d·ª•ng ph·∫ßn m·ªÅm

üí° **L·ªùi khuy√™n:**
‚Ä¢ B·∫Øt ƒë·∫ßu h·ªçc Photoshop c∆° b·∫£n
‚Ä¢ Tham kh·∫£o thi·∫øt k·∫ø tr√™n Pinterest, Behance
‚Ä¢ Th·ª±c h√†nh l√†m poster, banner ƒë∆°n gi·∫£n

üöÄ Quan tr·ªçng l√† C·∫¢M TH·∫®M M·ª∏, kh√¥ng ph·∫£i tay ngh·ªÅ v·∫Ω! B·∫°n c√≥ th√≠ch m√†u s·∫Øc v√† b·ªë c·ª•c ƒë·∫πp kh√¥ng?`;
      }

      if (msg.includes('c·∫ßn m√°y t√≠nh m·∫°nh') || msg.includes('c·∫•u h√¨nh cao') || msg.includes('m√°y y·∫øu')) {
        return `üíª **H·ªçc Thi·∫øt k·∫ø c·∫ßn m√°y t√≠nh m·∫°nh kh√¥ng?**

‚öñÔ∏è **Th·ª±c t·∫ø:** T√πy lo·∫°i thi·∫øt k·∫ø b·∫°n l√†m!

‚úÖ **M√°y t√≠nh b√¨nh th∆∞·ªùng (8GB RAM) l√†m ƒë∆∞·ª£c:**
‚Ä¢ Thi·∫øt k·∫ø poster, brochure
‚Ä¢ Logo v√† branding c∆° b·∫£n
‚Ä¢ Web design (UI mockup)
‚Ä¢ Social media content

‚ö†Ô∏è **C·∫ßn m√°y m·∫°nh h∆°n (16GB+ RAM):**
‚Ä¢ Video editing, motion graphics
‚Ä¢ 3D modeling v√† rendering
‚Ä¢ X·ª≠ l√Ω ·∫£nh RAW chuy√™n nghi·ªáp
‚Ä¢ Game design v·ªõi Unity/Unreal

üéØ **T·∫°i FPT Polytechnic:**
‚Ä¢ Lab m√°y c·∫•u h√¨nh cao ƒë·ªÉ th·ª±c h√†nh
‚Ä¢ Ph·∫ßn m·ªÅm b·∫£n quy·ªÅn ƒë·∫ßy ƒë·ªß
‚Ä¢ B·∫°n c√≥ th·ªÉ h·ªçc tr∆∞·ªõc khi quy·∫øt ƒë·ªãnh mua m√°y

üí° **G·ª£i √Ω:** B·∫Øt ƒë·∫ßu v·ªõi m√°y hi·ªán t·∫°i, n√¢ng c·∫•p d·∫ßn khi c·∫ßn thi·∫øt!

B·∫°n ƒëang c√≥ lo·∫°i m√°y g√¨? T√¥i c√≥ th·ªÉ t∆∞ v·∫•n c·ª• th·ªÉ h∆°n!`;
      }

      // Default design responses
      const designResponses = [
        `üé® **Thi·∫øt k·∫ø ƒë·ªì h·ªça - Th·ªèa s·ª©c s√°ng t·∫°o!**

‚ú® **N·ªôi dung h·ªçc:**
‚Ä¢ Adobe Creative Suite (Ps, Ai, Id)
‚Ä¢ Branding & Visual Identity
‚Ä¢ Web/App UI Design
‚Ä¢ Motion Graphics & Video

üéØ **Ngh·ªÅ nghi·ªáp h·∫•p d·∫´n:**
‚Ä¢ UI/UX Designer (12-30 tri·ªáu)
‚Ä¢ Graphic Designer (8-20 tri·ªáu)  
‚Ä¢ Brand Designer (15-35 tri·ªáu)
‚Ä¢ Art Director (20-50 tri·ªáu)

üí° B·∫°n ƒë√£ th·ª≠ thi·∫øt k·∫ø g√¨ ch∆∞a? Logo, poster hay website?`,

        `üé™ **Thi·∫øt k·∫ø ƒë·ªì h·ªça - Bi·∫øn √Ω t∆∞·ªüng th√†nh hi·ªán th·ª±c!**

üåü **ƒêi·ªÉm m·∫°nh c·ªßa ng√†nh:**
‚Ä¢ ƒê∆∞·ª£c l√†m vi·ªác v·ªõi th∆∞∆°ng hi·ªáu l·ªõn
‚Ä¢ M√¥i tr∆∞·ªùng s√°ng t·∫°o, nƒÉng ƒë·ªông
‚Ä¢ Freelance thu nh·∫≠p cao
‚Ä¢ C∆° h·ªôi du h·ªçc, l√†m vi·ªác qu·ªëc t·∫ø

üì± **Xu h∆∞·ªõng hot:** UI/UX Design, Digital Art, NFT Design

B·∫°n c√≥ khi·∫øu ngh·ªá thu·∫≠t hay th√≠ch s√°ng t·∫°o kh√¥ng?`
      ];
      return designResponses[Math.floor(Math.random() * designResponses.length)];
    }

    // Marketing related  
    if (msg.includes('marketing') || msg.includes('truy·ªÅn th√¥ng') || msg.includes('qu·∫£ng c√°o')) {
      const marketingResponses = [
        `üì¢ **Marketing - Ngh·ªá thu·∫≠t b√°n h√†ng th·ªùi ƒë·∫°i s·ªë!**

üöÄ **H·ªçc g√¨:**
‚Ä¢ Digital Marketing & SEO/SEM
‚Ä¢ Social Media Marketing  
‚Ä¢ Content Marketing & Copywriting
‚Ä¢ Data Analytics & CRM

üí∞ **Thu nh·∫≠p h·∫•p d·∫´n:**
‚Ä¢ Marketing Executive (8-15 tri·ªáu)
‚Ä¢ Digital Marketer (12-25 tri·ªáu)
‚Ä¢ Marketing Manager (20-40 tri·ªáu)
‚Ä¢ Growth Hacker (25-50 tri·ªáu)

üìà B·∫°n c√≥ kinh nghi·ªám b√°n h√†ng ho·∫∑c vi·∫øt content kh√¥ng?`,

        `üéØ **Marketing - K·∫øt n·ªëi th∆∞∆°ng hi·ªáu v·ªõi kh√°ch h√†ng!**

üî• **T·∫°i sao ch·ªçn Marketing:**
‚Ä¢ Ng√†nh ph√°t tri·ªÉn m·∫°nh m·∫Ω
‚Ä¢ C∆° h·ªôi networking r·ªông
‚Ä¢ L√†m vi·ªác v·ªõi nhi·ªÅu lƒ©nh v·ª±c
‚Ä¢ Ph√°t tri·ªÉn k·ªπ nƒÉng to√†n di·ªán

üì± **Xu h∆∞·ªõng:** TikTok Marketing, Influencer Marketing, AI Marketing

B·∫°n c√≥ th√≠ch giao ti·∫øp v√† thuy·∫øt ph·ª•c kh√¥ng?`
      ];
      return marketingResponses[Math.floor(Math.random() * marketingResponses.length)];
    }

    // Accounting related
    if (msg.includes('k·∫ø to√°n') || msg.includes('t√†i ch√≠nh') || msg.includes('accounting')) {
      return `üí∞ **K·∫ø to√°n - Ng√†nh ·ªïn ƒë·ªãnh, c·∫ßn thi·∫øt m·ªçi doanh nghi·ªáp!**

üìä **N·ªôi dung h·ªçc:**
‚Ä¢ K·∫ø to√°n t√†i ch√≠nh & qu·∫£n tr·ªã
‚Ä¢ Thu·∫ø & Ki·ªÉm to√°n
‚Ä¢ Ph·∫ßn m·ªÅm: MISA, SAP, Excel n√¢ng cao
‚Ä¢ Ph√¢n t√≠ch t√†i ch√≠nh

üè¢ **C∆° h·ªôi vi·ªác l√†m:**
‚Ä¢ K·∫ø to√°n vi√™n (7-15 tri·ªáu)
‚Ä¢ Ki·ªÉm to√°n vi√™n (12-25 tri·ªáu)
‚Ä¢ Chuy√™n vi√™n t√†i ch√≠nh (15-30 tri·ªáu)
‚Ä¢ CFO (30-100 tri·ªáu)

üìà B·∫°n c√≥ t√≠nh c·∫©n th·∫≠n v√† th√≠ch l√†m vi·ªác v·ªõi s·ªë li·ªáu kh√¥ng?`;
    }

    // Business Administration
    if (msg.includes('qu·∫£n tr·ªã') || msg.includes('kinh doanh') || msg.includes('business')) {
      return `üëî **Qu·∫£n tr·ªã Kinh doanh - L√£nh ƒë·∫°o t∆∞∆°ng lai!**

üéØ **K·ªπ nƒÉng ph√°t tri·ªÉn:**
‚Ä¢ Qu·∫£n l√Ω nh√¢n s·ª± & d·ª± √°n
‚Ä¢ Chi·∫øn l∆∞·ª£c kinh doanh
‚Ä¢ T√†i ch√≠nh doanh nghi·ªáp  
‚Ä¢ Leadership & Communication

üöÄ **V·ªã tr√≠ m·ª•c ti√™u:**
‚Ä¢ Team Leader (15-25 tri·ªáu)
‚Ä¢ Project Manager (20-35 tri·ªáu)
‚Ä¢ Business Analyst (18-40 tri·ªáu)
‚Ä¢ CEO/Founder (kh√¥ng gi·ªõi h·∫°n)

üí° B·∫°n c√≥ ∆∞·ªõc m∆° kh·ªüi nghi·ªáp ho·∫∑c l√£nh ƒë·∫°o team kh√¥ng?`;
    }

    // Admission questions
    if (msg.includes('tuy·ªÉn sinh') || msg.includes('ƒëi·ªÅu ki·ªán') || msg.includes('ƒëƒÉng k√Ω') || msg.includes('h·ªçc ph√≠')) {
      return `üìã **Tuy·ªÉn sinh FPT Polytechnic 2024:**

‚úÖ **ƒêi·ªÅu ki·ªán d·ªÖ d√†ng:**
‚Ä¢ T·ªët nghi·ªáp THPT (ho·∫∑c t∆∞∆°ng ƒë∆∞∆°ng)
‚Ä¢ Kh√¥ng c·∫ßn thi ƒë·∫ßu v√†o
‚Ä¢ X√©t tuy·ªÉn h·ªçc b·∫° ho·∫∑c ƒëi·ªÉm thi THPT

üìÖ **L·ªãch khai gi·∫£ng linh ho·∫°t:**
‚Ä¢ Th√°ng 3, 6, 9, 12 h√†ng nƒÉm
‚Ä¢ ƒêƒÉng k√Ω tr·ª±c tuy·∫øn 24/7

üí∞ **H·ªçc ph√≠ h·ª£p l√Ω:** 15-22 tri·ªáu/nƒÉm
üéì **Th·ªùi gian:** 2.5-3 nƒÉm

üéÅ **∆Øu ƒë√£i:** H·ªçc b·ªïng l√™n ƒë·∫øn 100% h·ªçc ph√≠ cho sinh vi√™n xu·∫•t s·∫Øc!

B·∫°n mu·ªën ƒëƒÉng k√Ω t∆∞ v·∫•n tr·ª±c ti·∫øp kh√¥ng?`;
    }

    // Career opportunities
    if (msg.includes('vi·ªác l√†m') || msg.includes('ngh·ªÅ nghi·ªáp') || msg.includes('t∆∞∆°ng lai') || msg.includes('l∆∞∆°ng')) {
      return `üíº **C∆° h·ªôi ngh·ªÅ nghi·ªáp sau t·ªët nghi·ªáp FPT Polytechnic:**

üèÜ **Cam k·∫øt vi·ªác l√†m:**
‚Ä¢ 85% sinh vi√™n c√≥ vi·ªác l√†m sau 6 th√°ng
‚Ä¢ M·ª©c l∆∞∆°ng trung b√¨nh 8-15 tri·ªáu (fresh)
‚Ä¢ H∆°n 500 doanh nghi·ªáp ƒë·ªëi t√°c tuy·ªÉn d·ª•ng

üåü **Doanh nghi·ªáp ti√™u bi·ªÉu:**
FPT Software, Viettel, VNPT, Samsung, LG...

üöÄ **H·ªó tr·ª£ ngh·ªÅ nghi·ªáp:**
‚Ä¢ Job Fair th∆∞·ªùng xuy√™n
‚Ä¢ K·∫øt n·ªëi alumni network
‚Ä¢ Coaching CV & ph·ªèng v·∫•n
‚Ä¢ Th·ª±c t·∫≠p c√≥ l∆∞∆°ng t·∫°i doanh nghi·ªáp

B·∫°n quan t√¢m ng√†nh n√†o ƒë·ªÉ t√¥i t∆∞ v·∫•n c·ª• th·ªÉ h∆°n?`;
    }

    // Specific questions about skills, interests
    if (msg.includes('ph√π h·ª£p') || msg.includes('n√™n h·ªçc') || msg.includes('ch·ªçn ng√†nh')) {
      return `ü§î **L√†m sao ch·ªçn ng√†nh ph√π h·ª£p?**

üìù **H√£y t·ª± h·ªèi m√¨nh:**
‚Ä¢ B·∫°n th√≠ch l√†m vi·ªác v·ªõi m√°y t√≠nh? ‚Üí IT
‚Ä¢ B·∫°n c√≥ khi·∫øu th·∫©m m·ªπ, s√°ng t·∫°o? ‚Üí Thi·∫øt k·∫ø  
‚Ä¢ B·∫°n gi·ªèi giao ti·∫øp, thuy·∫øt ph·ª•c? ‚Üí Marketing
‚Ä¢ B·∫°n t·ªâ m·ªâ, th√≠ch s·ªë li·ªáu? ‚Üí K·∫ø to√°n
‚Ä¢ B·∫°n c√≥ t·∫ßm nh√¨n, th√≠ch l√£nh ƒë·∫°o? ‚Üí Qu·∫£n tr·ªã KD

üéØ **G·ª£i √Ω:** H√£y l√†m b√†i test kh·∫£o s√°t tr√™n website c·ªßa ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n ch√≠nh x√°c nh·∫•t!

B·∫°n mu·ªën t√¥i h·ªèi th√™m v·ªÅ s·ªü th√≠ch ƒë·ªÉ t∆∞ v·∫•n c·ª• th·ªÉ kh√¥ng?`;
    }

    // Random encouraging responses for unclear messages
    const randomResponses = [
      `üåü T√¥i hi·ªÉu b·∫°n ƒëang t√¨m hi·ªÉu v·ªÅ ƒë·ªãnh h∆∞·ªõng h·ªçc t·∫≠p. H√£y chia s·∫ª v·ªõi t√¥i: b·∫°n th√≠ch l√†m g√¨ trong th·ªùi gian r·∫£nh? T·ª´ ƒë√≥ t√¥i c√≥ th·ªÉ t∆∞ v·∫•n ng√†nh h·ªçc ph√π h·ª£p nh·∫•t!`,
      
      `üí° M·ªói ng√†nh h·ªçc ƒë·ªÅu c√≥ nh·ªØng ƒëi·ªÉm th√∫ v·ªã ri√™ng! B·∫°n c√≥ th·ªÉ k·ªÉ cho t√¥i nghe v·ªÅ nh·ªØng m√¥n h·ªçc y√™u th√≠ch ·ªü tr∆∞·ªùng kh√¥ng? T√¥i s·∫Ω g·ª£i √Ω ng√†nh ph√π h·ª£p!`,
      
      `üéØ ƒê·ªÉ t∆∞ v·∫•n ch√≠nh x√°c nh·∫•t, b·∫°n c√≥ th·ªÉ cho t√¥i bi·∫øt: b·∫°n l√† ng∆∞·ªùi th√≠ch s√°ng t·∫°o, t√≠nh to√°n, hay giao ti·∫øp? M·ªói t√≠nh c√°ch s·∫Ω ph√π h·ª£p v·ªõi nh·ªØng ng√†nh kh√°c nhau!`,
      
      `üöÄ FPT Polytechnic c√≥ nhi·ªÅu ng√†nh hot nh∆∞ IT, Thi·∫øt k·∫ø, Marketing... B·∫°n mu·ªën bi·∫øt ng√†nh n√†o c√≥ m·ª©c l∆∞∆°ng cao nh·∫•t? Hay c∆° h·ªôi vi·ªác l√†m t·ªët nh·∫•t?`
    ];

    return randomResponses[Math.floor(Math.random() * randomResponses.length)];
  }
}
